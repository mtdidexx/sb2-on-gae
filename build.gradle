buildscript {
    ext {
         springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'war'
    id 'jacoco'
    id 'io.franzbecker.gradle-lombok' version '1.11'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.cloud.tools.appengine'

group = 'net.katrinka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

configurations {
    providedRuntime
    all*.exclude module: 'spring-boot-starter-tomcat'
    // don't want "jul" in the GAE Standard env
    all*.exclude group: 'org.slf4j', module: 'jul-to-slf4j'
    all*.exclude group: 'org.slf4j', module: 'simple-slf4j'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
    providedCompile('javax.servlet:javax.servlet-api:3.1.0')
    compileOnly('org.projectlombok:lombok')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile 'io.rest-assured:rest-assured:3.0.7'
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
}

test {
    useJUnit {
        excludeCategories 'net.katrinka.AcceptanceTest'
    }
}

task acceptanceTest(type: Test) {
    group 'verification'
    description "Run API tests against running application"
    useJUnit {
        includeCategories 'net.katrinka.AcceptanceTest'
    }
}

appengine {
    deploy {
        stopPreviousVersion = true
        promote = true
    }
}